// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`All resources created 1`] = `
{
  "Outputs": {
    "apiKey": {
      "Description": "api key",
      "Export": {
        "Name": "apiKey",
      },
      "Value": {
        "Ref": "APIkey1526C0EE",
      },
    },
    "apiUrl": {
      "Description": "rest api invocation url",
      "Export": {
        "Name": "apiUrl",
      },
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "serviceBApi9F0B1347",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "serviceBApiDeploymentStageprodFD0485DB",
            },
            "/",
          ],
        ],
      },
    },
    "serviceBApiEndpoint38203E71": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "serviceBApi9F0B1347",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "serviceBApiDeploymentStageprodFD0485DB",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "APIkey1526C0EE": {
      "Properties": {
        "Description": "APIKey used by my api to do awesome stuff",
        "Enabled": true,
        "Name": "dev-key",
      },
      "Type": "AWS::ApiGateway::ApiKey",
    },
    "createItemFunction8D47E48A": {
      "DependsOn": [
        "createItemFunctionServiceRoleDefaultPolicy8FAF1611",
        "createItemFunctionServiceRole1BBF2178",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "b5fa2dd1a0bd00f2e7dcab40573b95b23c0fcde7601c4b4b046b48648db7293b.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "PRIMARY_KEY": "itemId",
            "TABLE_NAME": {
              "Ref": "serviceBItemsB8DF2BC7",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "createItemFunctionServiceRole1BBF2178",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "createItemFunctionServiceRole1BBF2178": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "createItemFunctionServiceRoleDefaultPolicy8FAF1611": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "serviceBItemsB8DF2BC7",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "createItemFunctionServiceRoleDefaultPolicy8FAF1611",
        "Roles": [
          {
            "Ref": "createItemFunctionServiceRole1BBF2178",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "deleteItemFunction2918B1B0": {
      "DependsOn": [
        "deleteItemFunctionServiceRoleDefaultPolicyDCE46F14",
        "deleteItemFunctionServiceRole5C201FCC",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "21a255cda37e8256f24695aab1d96eaa71b07c19086946c0fa3dd98b4a2af440.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "PRIMARY_KEY": "itemId",
            "TABLE_NAME": {
              "Ref": "serviceBItemsB8DF2BC7",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "deleteItemFunctionServiceRole5C201FCC",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "deleteItemFunctionServiceRole5C201FCC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "deleteItemFunctionServiceRoleDefaultPolicyDCE46F14": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "serviceBItemsB8DF2BC7",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "deleteItemFunctionServiceRoleDefaultPolicyDCE46F14",
        "Roles": [
          {
            "Ref": "deleteItemFunctionServiceRole5C201FCC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "getAllItemsFunction0B7A913E": {
      "DependsOn": [
        "getAllItemsFunctionServiceRoleDefaultPolicyF069C759",
        "getAllItemsFunctionServiceRoleCC084440",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "bace00f979afe87951f2a6681b609eb254be6142fac9beb7b03079fb87ceec29.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "PRIMARY_KEY": "itemId",
            "TABLE_NAME": {
              "Ref": "serviceBItemsB8DF2BC7",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "getAllItemsFunctionServiceRoleCC084440",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "getAllItemsFunctionServiceRoleCC084440": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "getAllItemsFunctionServiceRoleDefaultPolicyF069C759": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "serviceBItemsB8DF2BC7",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "getAllItemsFunctionServiceRoleDefaultPolicyF069C759",
        "Roles": [
          {
            "Ref": "getAllItemsFunctionServiceRoleCC084440",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "getOneItemFunctionE3257B22": {
      "DependsOn": [
        "getOneItemFunctionServiceRoleDefaultPolicy6B743AA8",
        "getOneItemFunctionServiceRoleCFD54796",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "a1245a189247702150eb8bd7b97fc133ffa37865ec3361e4d6120c2783e7084e.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "PRIMARY_KEY": "itemId",
            "TABLE_NAME": {
              "Ref": "serviceBItemsB8DF2BC7",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "getOneItemFunctionServiceRoleCFD54796",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "getOneItemFunctionServiceRoleCFD54796": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "getOneItemFunctionServiceRoleDefaultPolicy6B743AA8": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "serviceBItemsB8DF2BC7",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "getOneItemFunctionServiceRoleDefaultPolicy6B743AA8",
        "Roles": [
          {
            "Ref": "getOneItemFunctionServiceRoleCFD54796",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "serviceBApi9F0B1347": {
      "Properties": {
        "Name": "serviceBApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "serviceBApiAccountC9C371D1": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "serviceBApi9F0B1347",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "serviceBApiCloudWatchRoleE62732A8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "serviceBApiCloudWatchRoleE62732A8": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "serviceBApiDeploymentA5451E40c9404ec964591998c7bd0ac223e9b518": {
      "DependsOn": [
        "serviceBApiitemsidDELETE695ACA74",
        "serviceBApiitemsidGET742A397A",
        "serviceBApiitemsidOPTIONSDFE1332F",
        "serviceBApiitemsidPATCH8F9712DB",
        "serviceBApiitemsid2A1C8B4E",
        "serviceBApiitemsGET2FA2DD04",
        "serviceBApiitemsOPTIONS74396E76",
        "serviceBApiitemsPOST511B5CF7",
        "serviceBApiitemsAD938351",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "serviceBApi9F0B1347",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "serviceBApiDeploymentStageprodFD0485DB": {
      "DependsOn": [
        "serviceBApiAccountC9C371D1",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "serviceBApiDeploymentA5451E40c9404ec964591998c7bd0ac223e9b518",
        },
        "RestApiId": {
          "Ref": "serviceBApi9F0B1347",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "serviceBApidevUsagePlan9E8B952B": {
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "serviceBApi9F0B1347",
            },
            "Stage": {
              "Ref": "serviceBApiDeploymentStageprodFD0485DB",
            },
            "Throttle": {},
          },
        ],
        "Quota": {
          "Limit": 10000000,
          "Period": "MONTH",
        },
        "Throttle": {
          "BurstLimit": 500,
          "RateLimit": 1000,
        },
        "UsagePlanName": "devUsagePlan",
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "serviceBApidevUsagePlanUsagePlanKeyResourceTestStackAPIkeyC1BBDBE519EC6A79": {
      "Properties": {
        "KeyId": {
          "Ref": "APIkey1526C0EE",
        },
        "KeyType": "API_KEY",
        "UsagePlanId": {
          "Ref": "serviceBApidevUsagePlan9E8B952B",
        },
      },
      "Type": "AWS::ApiGateway::UsagePlanKey",
    },
    "serviceBApiitemsAD938351": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "serviceBApi9F0B1347",
            "RootResourceId",
          ],
        },
        "PathPart": "items",
        "RestApiId": {
          "Ref": "serviceBApi9F0B1347",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "serviceBApiitemsGET2FA2DD04": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getAllItemsFunction0B7A913E",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "serviceBApiitemsAD938351",
        },
        "RestApiId": {
          "Ref": "serviceBApi9F0B1347",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "serviceBApiitemsGETApiPermissionTestStackserviceBApiA45BAB35GETitemsBC9D564E": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getAllItemsFunction0B7A913E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "serviceBApi9F0B1347",
              },
              "/",
              {
                "Ref": "serviceBApiDeploymentStageprodFD0485DB",
              },
              "/GET/items",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "serviceBApiitemsGETApiPermissionTestTestStackserviceBApiA45BAB35GETitems103677BF": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getAllItemsFunction0B7A913E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "serviceBApi9F0B1347",
              },
              "/test-invoke-stage/GET/items",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "serviceBApiitemsOPTIONS74396E76": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{"statusCode": 200}",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": {
          "Ref": "serviceBApiitemsAD938351",
        },
        "RestApiId": {
          "Ref": "serviceBApi9F0B1347",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "serviceBApiitemsPOST511B5CF7": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "createItemFunction8D47E48A",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "serviceBApiitemsAD938351",
        },
        "RestApiId": {
          "Ref": "serviceBApi9F0B1347",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "serviceBApiitemsPOSTApiPermissionTestStackserviceBApiA45BAB35POSTitemsB6A480FE": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createItemFunction8D47E48A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "serviceBApi9F0B1347",
              },
              "/",
              {
                "Ref": "serviceBApiDeploymentStageprodFD0485DB",
              },
              "/POST/items",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "serviceBApiitemsPOSTApiPermissionTestTestStackserviceBApiA45BAB35POSTitems272C3027": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createItemFunction8D47E48A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "serviceBApi9F0B1347",
              },
              "/test-invoke-stage/POST/items",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "serviceBApiitemsid2A1C8B4E": {
      "Properties": {
        "ParentId": {
          "Ref": "serviceBApiitemsAD938351",
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "serviceBApi9F0B1347",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "serviceBApiitemsidDELETE695ACA74": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "DELETE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "deleteItemFunction2918B1B0",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "serviceBApiitemsid2A1C8B4E",
        },
        "RestApiId": {
          "Ref": "serviceBApi9F0B1347",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "serviceBApiitemsidDELETEApiPermissionTestStackserviceBApiA45BAB35DELETEitemsidC61B95BE": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteItemFunction2918B1B0",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "serviceBApi9F0B1347",
              },
              "/",
              {
                "Ref": "serviceBApiDeploymentStageprodFD0485DB",
              },
              "/DELETE/items/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "serviceBApiitemsidDELETEApiPermissionTestTestStackserviceBApiA45BAB35DELETEitemsidCED059B2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteItemFunction2918B1B0",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "serviceBApi9F0B1347",
              },
              "/test-invoke-stage/DELETE/items/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "serviceBApiitemsidGET742A397A": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getOneItemFunctionE3257B22",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "serviceBApiitemsid2A1C8B4E",
        },
        "RestApiId": {
          "Ref": "serviceBApi9F0B1347",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "serviceBApiitemsidGETApiPermissionTestStackserviceBApiA45BAB35GETitemsid5DABC27D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getOneItemFunctionE3257B22",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "serviceBApi9F0B1347",
              },
              "/",
              {
                "Ref": "serviceBApiDeploymentStageprodFD0485DB",
              },
              "/GET/items/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "serviceBApiitemsidGETApiPermissionTestTestStackserviceBApiA45BAB35GETitemsidAE97BCD7": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getOneItemFunctionE3257B22",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "serviceBApi9F0B1347",
              },
              "/test-invoke-stage/GET/items/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "serviceBApiitemsidOPTIONSDFE1332F": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{"statusCode": 200}",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": {
          "Ref": "serviceBApiitemsid2A1C8B4E",
        },
        "RestApiId": {
          "Ref": "serviceBApi9F0B1347",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "serviceBApiitemsidPATCH8F9712DB": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "PATCH",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "updateItemFunction59415205",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "serviceBApiitemsid2A1C8B4E",
        },
        "RestApiId": {
          "Ref": "serviceBApi9F0B1347",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "serviceBApiitemsidPATCHApiPermissionTestStackserviceBApiA45BAB35PATCHitemsidFFFFC5D6": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updateItemFunction59415205",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "serviceBApi9F0B1347",
              },
              "/",
              {
                "Ref": "serviceBApiDeploymentStageprodFD0485DB",
              },
              "/PATCH/items/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "serviceBApiitemsidPATCHApiPermissionTestTestStackserviceBApiA45BAB35PATCHitemsidE6AECA3D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updateItemFunction59415205",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "serviceBApi9F0B1347",
              },
              "/test-invoke-stage/PATCH/items/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "serviceBItemsB8DF2BC7": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "serviceBItemsId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "serviceBItemsId",
            "KeyType": "HASH",
          },
        ],
        "SSESpecification": {
          "SSEEnabled": true,
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_IMAGE",
        },
        "TableName": "serviceBItems",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "serviceBItemsDynamoDBRole40C689F9": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonDynamoDBFullAccess",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "updateItemFunction59415205": {
      "DependsOn": [
        "updateItemFunctionServiceRoleDefaultPolicy6A793729",
        "updateItemFunctionServiceRole40035396",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "17c2e2362789cdb964923b475f542672564ed5e364467132bc462ae0f64a7365.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "PRIMARY_KEY": "itemId",
            "TABLE_NAME": {
              "Ref": "serviceBItemsB8DF2BC7",
            },
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "updateItemFunctionServiceRole40035396",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "updateItemFunctionServiceRole40035396": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "updateItemFunctionServiceRoleDefaultPolicy6A793729": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "serviceBItemsB8DF2BC7",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "updateItemFunctionServiceRoleDefaultPolicy6A793729",
        "Roles": [
          {
            "Ref": "updateItemFunctionServiceRole40035396",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
